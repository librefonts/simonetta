# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/simonetta/METADATA.json /home/travis/build/fontdirectory/simonetta/builds/build
$ cp -a /home/travis/build/fontdirectory/simonetta/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/simonetta/builds/build
$ cp -a /home/travis/build/fontdirectory/simonetta/FONTLOG.txt /home/travis/build/fontdirectory/simonetta/builds/build
$ cp -a Simonetta-Regular.ttf.ttx Simonetta-Italic.ttf.ttx Simonetta-BlackItalic.ttf.ttx Simonetta-Black.ttf.ttx src/Simonetta-Regular.otf.ttx src/Simonetta-Italic.otf.ttx src/Simonetta-BlackItalic.otf.ttx src/Simonetta-Black.otf.ttx Simonetta-Regular.ttf._p_r_e_p.ttx Simonetta-Regular.ttf._p_o_s_t.ttx Simonetta-Regular.ttf._n_a_m_e.ttx Simonetta-Regular.ttf._m_a_x_p.ttx Simonetta-Regular.ttf._l_o_c_a.ttx Simonetta-Regular.ttf._k_e_r_n.ttx Simonetta-Regular.ttf._h_m_t_x.ttx Simonetta-Regular.ttf._h_h_e_a.ttx Simonetta-Regular.ttf._h_e_a_d.ttx Simonetta-Regular.ttf._h_d_m_x.ttx Simonetta-Regular.ttf._g_l_y_f.ttx Simonetta-Regular.ttf._g_a_s_p.ttx Simonetta-Regular.ttf._f_p_g_m.ttx Simonetta-Regular.ttf._c_v_t.ttx Simonetta-Regular.ttf._c_m_a_p.ttx Simonetta-Regular.ttf.O_S_2f_2.ttx Simonetta-Regular.ttf.L_T_S_H_.ttx Simonetta-Regular.ttf.GlyphOrder.ttx Simonetta-Regular.ttf.G_S_U_B_.ttx Simonetta-Italic.ttf._p_r_e_p.ttx Simonetta-Italic.ttf._p_o_s_t.ttx Simonetta-Italic.ttf._n_a_m_e.ttx Simonetta-Italic.ttf._m_a_x_p.ttx Simonetta-Italic.ttf._l_o_c_a.ttx Simonetta-Italic.ttf._k_e_r_n.ttx Simonetta-Italic.ttf._h_m_t_x.ttx Simonetta-Italic.ttf._h_h_e_a.ttx Simonetta-Italic.ttf._h_e_a_d.ttx Simonetta-Italic.ttf._h_d_m_x.ttx Simonetta-Italic.ttf._g_l_y_f.ttx Simonetta-Italic.ttf._g_a_s_p.ttx Simonetta-Italic.ttf._f_p_g_m.ttx Simonetta-Italic.ttf._c_v_t.ttx Simonetta-Italic.ttf._c_m_a_p.ttx Simonetta-Italic.ttf.O_S_2f_2.ttx Simonetta-Italic.ttf.L_T_S_H_.ttx Simonetta-Italic.ttf.GlyphOrder.ttx Simonetta-Italic.ttf.G_S_U_B_.ttx Simonetta-BlackItalic.ttf._p_r_e_p.ttx Simonetta-BlackItalic.ttf._p_o_s_t.ttx Simonetta-BlackItalic.ttf._n_a_m_e.ttx Simonetta-BlackItalic.ttf._m_a_x_p.ttx Simonetta-BlackItalic.ttf._l_o_c_a.ttx Simonetta-BlackItalic.ttf._k_e_r_n.ttx Simonetta-BlackItalic.ttf._h_m_t_x.ttx Simonetta-BlackItalic.ttf._h_h_e_a.ttx Simonetta-BlackItalic.ttf._h_e_a_d.ttx Simonetta-BlackItalic.ttf._h_d_m_x.ttx Simonetta-BlackItalic.ttf._g_l_y_f.ttx Simonetta-BlackItalic.ttf._g_a_s_p.ttx Simonetta-BlackItalic.ttf._f_p_g_m.ttx Simonetta-BlackItalic.ttf._c_v_t.ttx Simonetta-BlackItalic.ttf._c_m_a_p.ttx Simonetta-BlackItalic.ttf.V_D_M_X_.ttx Simonetta-BlackItalic.ttf.O_S_2f_2.ttx Simonetta-BlackItalic.ttf.L_T_S_H_.ttx Simonetta-BlackItalic.ttf.GlyphOrder.ttx Simonetta-BlackItalic.ttf.G_S_U_B_.ttx Simonetta-BlackItalic.ttf.G_P_O_S_.ttx Simonetta-Black.ttf._p_r_e_p.ttx Simonetta-Black.ttf._p_o_s_t.ttx Simonetta-Black.ttf._n_a_m_e.ttx Simonetta-Black.ttf._m_a_x_p.ttx Simonetta-Black.ttf._l_o_c_a.ttx Simonetta-Black.ttf._k_e_r_n.ttx Simonetta-Black.ttf._h_m_t_x.ttx Simonetta-Black.ttf._h_h_e_a.ttx Simonetta-Black.ttf._h_e_a_d.ttx Simonetta-Black.ttf._h_d_m_x.ttx Simonetta-Black.ttf._g_l_y_f.ttx Simonetta-Black.ttf._g_a_s_p.ttx Simonetta-Black.ttf._f_p_g_m.ttx Simonetta-Black.ttf._c_v_t.ttx Simonetta-Black.ttf._c_m_a_p.ttx Simonetta-Black.ttf.V_D_M_X_.ttx Simonetta-Black.ttf.O_S_2f_2.ttx Simonetta-Black.ttf.L_T_S_H_.ttx Simonetta-Black.ttf.GlyphOrder.ttx Simonetta-Black.ttf.G_S_U_B_.ttx Simonetta-Black.ttf.G_P_O_S_.ttx src/Simonetta-Regular.otf._p_o_s_t.ttx src/Simonetta-Regular.otf._n_a_m_e.ttx src/Simonetta-Regular.otf._m_a_x_p.ttx src/Simonetta-Regular.otf._k_e_r_n.ttx src/Simonetta-Regular.otf._h_m_t_x.ttx src/Simonetta-Regular.otf._h_h_e_a.ttx src/Simonetta-Regular.otf._h_e_a_d.ttx src/Simonetta-Regular.otf._c_m_a_p.ttx src/Simonetta-Regular.otf.O_S_2f_2.ttx src/Simonetta-Regular.otf.GlyphOrder.ttx src/Simonetta-Regular.otf.G_S_U_B_.ttx src/Simonetta-Regular.otf.G_P_O_S_.ttx src/Simonetta-Regular.otf.C_F_F_.ttx src/Simonetta-Italic.otf._p_o_s_t.ttx src/Simonetta-Italic.otf._n_a_m_e.ttx src/Simonetta-Italic.otf._m_a_x_p.ttx src/Simonetta-Italic.otf._k_e_r_n.ttx src/Simonetta-Italic.otf._h_m_t_x.ttx src/Simonetta-Italic.otf._h_h_e_a.ttx src/Simonetta-Italic.otf._h_e_a_d.ttx src/Simonetta-Italic.otf._c_m_a_p.ttx src/Simonetta-Italic.otf.O_S_2f_2.ttx src/Simonetta-Italic.otf.GlyphOrder.ttx src/Simonetta-Italic.otf.G_S_U_B_.ttx src/Simonetta-Italic.otf.G_P_O_S_.ttx src/Simonetta-Italic.otf.C_F_F_.ttx src/Simonetta-BlackItalic.otf._p_o_s_t.ttx src/Simonetta-BlackItalic.otf._n_a_m_e.ttx src/Simonetta-BlackItalic.otf._m_a_x_p.ttx src/Simonetta-BlackItalic.otf._k_e_r_n.ttx src/Simonetta-BlackItalic.otf._h_m_t_x.ttx src/Simonetta-BlackItalic.otf._h_h_e_a.ttx src/Simonetta-BlackItalic.otf._h_e_a_d.ttx src/Simonetta-BlackItalic.otf._c_m_a_p.ttx src/Simonetta-BlackItalic.otf.O_S_2f_2.ttx src/Simonetta-BlackItalic.otf.GlyphOrder.ttx src/Simonetta-BlackItalic.otf.G_S_U_B_.ttx src/Simonetta-BlackItalic.otf.G_P_O_S_.ttx src/Simonetta-BlackItalic.otf.C_F_F_.ttx src/Simonetta-Black.otf._p_o_s_t.ttx src/Simonetta-Black.otf._n_a_m_e.ttx src/Simonetta-Black.otf._m_a_x_p.ttx src/Simonetta-Black.otf._k_e_r_n.ttx src/Simonetta-Black.otf._h_m_t_x.ttx src/Simonetta-Black.otf._h_h_e_a.ttx src/Simonetta-Black.otf._h_e_a_d.ttx src/Simonetta-Black.otf._c_m_a_p.ttx src/Simonetta-Black.otf.O_S_2f_2.ttx src/Simonetta-Black.otf.GlyphOrder.ttx src/Simonetta-Black.otf.G_S_U_B_.ttx src/Simonetta-Black.otf.G_P_O_S_.ttx src/Simonetta-Black.otf.C_F_F_.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ fontbakery-check.py upstream-ttx Simonetta-Black.otf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-BlackItalic.otf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-Italic.otf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-Regular.otf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.otf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-Black.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-BlackItalic.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-Italic.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx Simonetta-Regular.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.ttf.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/simonetta/builds/build /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.ttx /home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.ttx
Compiling "/home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Regular.ttx" to "/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Italic.ttx" to "/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-BlackItalic.ttx" to "/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/simonetta/builds/build/sources/Simonetta-Black.ttx" to "/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
### Test Simonetta-Regular.ttf
$ fontbakery-check.py result Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'hdmx' horizontal device metrics table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
Parameter              Simonetta-Regular.ttf    Simonetta-Black.ttf    Simonetta-BlackItalic.ttf    Simonetta-Italic.ttf    
ymax                   1927                     1970                   1970                         1927                    
hhea.ascent            1970                     1970                   1970                         1970                    
OS/2.sTypoAscender     1970                     1970                   1970                         1970                    
OS/2.usWinAscent       1970                     1970                   1970                         1970                    
ymin                   -545                     -586                   -594                         -545                    
hhea.descent           -594                     -594                   -594                         -594                    
OS/2.sTypoDescender    -594                     -594                   -594                         -594                    
OS/2.usWinDescent      594                      594                    594                          594                     
hhea.lineGap           0                        0                      0                            0                       
OS/2.sTypoLineGap      0                        0                      0                            0                       
hhea total             2564                     2564                   2564                         2564                    
typo total             2564                     2564                   2564                         2564                    
win total              2564                     2564                   2564                         2564                    
UPM:Heights            2048:2472                2048:2556              2048:2564                    2048:2472               
UPM:Heights %          120 %                    124 %                  125 %                        120 %                   


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Simonetta-Regular.ttf
$ ls -l 'Simonetta-Regular.ttf'* # look at the size savings of that subset process
Simonetta-Regular.ttf.opt: 132280 bytes
Simonetta-Regular.ttf: 134304 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf.opt /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
### Autohint TTFs (ttfautohint) Simonetta-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf '/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf: 132280 bytes
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.autohint.ttf: 98956 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.autohint.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
### Subset TTFs (pyftsubset) Simonetta-Regular.ttf
$ pyftsubset Simonetta-Regular.latin
$ pyftsubset Simonetta-Regular.menu
strippedname:/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Regular.ttf
spaceWidth is    444
nbspWidth is     444
Nothing to do
### Test Simonetta-Italic.ttf
$ fontbakery-check.py result Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'hdmx' horizontal device metrics table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Simonetta-Italic.ttf
$ ls -l 'Simonetta-Italic.ttf'* # look at the size savings of that subset process
Simonetta-Italic.ttf.opt: 125144 bytes
Simonetta-Italic.ttf: 127184 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf.opt /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
### Autohint TTFs (ttfautohint) Simonetta-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf '/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf: 125144 bytes
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.autohint.ttf: 92920 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.autohint.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
### Subset TTFs (pyftsubset) Simonetta-Italic.ttf
$ pyftsubset Simonetta-Italic.latin
$ pyftsubset Simonetta-Italic.menu
strippedname:/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Italic.ttf
spaceWidth is    447
nbspWidth is     447
Nothing to do
### Test Simonetta-BlackItalic.ttf
$ fontbakery-check.py result Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Simonetta-BlackItalic.ttf
$ ls -l 'Simonetta-BlackItalic.ttf'* # look at the size savings of that subset process
Simonetta-BlackItalic.ttf.opt: 107152 bytes
Simonetta-BlackItalic.ttf: 119004 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf.opt /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
### Autohint TTFs (ttfautohint) Simonetta-BlackItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf '/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf: 107152 bytes
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.autohint.ttf: 60004 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.autohint.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
### Subset TTFs (pyftsubset) Simonetta-BlackItalic.ttf
$ pyftsubset Simonetta-BlackItalic.latin
$ pyftsubset Simonetta-BlackItalic.menu
strippedname:/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-BlackItalic.ttf
spaceWidth is    446
nbspWidth is     446
Nothing to do
### Test Simonetta-Black.ttf
$ fontbakery-check.py result Simonetta-Black.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.fix /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Simonetta-Black.ttf
$ ls -l 'Simonetta-Black.ttf'* # look at the size savings of that subset process
Simonetta-Black.ttf.opt: 111628 bytes
Simonetta-Black.ttf: 121488 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf.opt /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
### Autohint TTFs (ttfautohint) Simonetta-Black.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf '/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf: 111628 bytes
/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.autohint.ttf: 60956 bytes
$ mv /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.autohint.ttf /home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
### Subset TTFs (pyftsubset) Simonetta-Black.ttf
$ pyftsubset Simonetta-Black.latin
$ pyftsubset Simonetta-Black.menu
strippedname:/home/travis/build/fontdirectory/simonetta/builds/build/Simonetta-Black.ttf
spaceWidth is    457
nbspWidth is     457
Nothing to do
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/simonetta/builds/build
{} exists
Designer's name from font is: Gayaneh Bagdasaryan
Original size: 98956\nGzip size: 52689
Family Name: Simonetta
PS Name: Simonetta-Black
Full Name: Simonetta Black
Style: normal
Weight: 900
Filename: Simonetta-Black.ttf
Copyright: Copyright (c) 2011-2012, Brownfox (www.brownfox.org gayaneh.b@gmail.com), with Reserved Font Name "Simonetta"
Family Name: Simonetta
PS Name: Simonetta-BlackItalic
Full Name: Simonetta Black Italic
Style: italic
Weight: 900
Filename: Simonetta-BlackItalic.ttf
Copyright: Copyright (c) 2011-2012, Brownfox (www.brownfox.org gayaneh.b@gmail.com), with Reserved Font Name "Simonetta"
Family Name: Simonetta
PS Name: Simonetta-Italic
Full Name: Simonetta Italic
Style: italic
Weight: 400
Filename: Simonetta-Italic.ttf
Copyright: Copyright (c) 2011, BrownFox (www.brownfox.org), with Reserved Font Name "Simonetta"
Family Name: Simonetta
PS Name: Simonetta-Regular
Full Name: Simonetta
Style: normal
Weight: 400
Filename: Simonetta-Regular.ttf
Copyright: Copyright (c) 2011, BrownFox (www.brownfox.org), with Reserved Font Name "Simonetta"
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): FAIL
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
{
  "name": "Simonetta", 
  "designer": "Brownfox", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Display", 
  "size": 78140, 
  "fonts": [
    {
      "name": "Simonetta", 
      "postScriptName": "Simonetta-Black", 
      "fullName": "Simonetta Black", 
      "style": "normal", 
      "weight": 900, 
      "filename": "Simonetta-Black.ttf", 
      "copyright": "Copyright (c) 2011-2012, Brownfox (www.brownfox.org gayaneh.b@gmail.com), with Reserved Font Name \"Simonetta\""
    }, 
    {
      "name": "Simonetta", 
      "postScriptName": "Simonetta-BlackItalic", 
      "fullName": "Simonetta Black Italic", 
      "style": "italic", 
      "weight": 900, 
      "filename": "Simonetta-BlackItalic.ttf", 
      "copyright": "Copyright (c) 2011-2012, Brownfox (www.brownfox.org gayaneh.b@gmail.com), with Reserved Font Name \"Simonetta\""
    }, 
    {
      "name": "Simonetta", 
      "postScriptName": "Simonetta-Italic", 
      "fullName": "Simonetta Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "Simonetta-Italic.ttf", 
      "copyright": "Copyright (c) 2011, BrownFox (www.brownfox.org), with Reserved Font Name \"Simonetta\""
    }, 
    {
      "name": "Simonetta", 
      "postScriptName": "Simonetta-Regular", 
      "fullName": "Simonetta", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Simonetta-Regular.ttf", 
      "copyright": "Copyright (c) 2011, BrownFox (www.brownfox.org), with Reserved Font Name \"Simonetta\""
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2012-04-04"
}
